#!/usr/bin/env python3
"""
Create file list directly from E: drive BAM and BAI files
"""

import os
import glob
import sys

def create_e_drive_file_list_direct(folder_path=None):
    """
    Create file list from BAM and BAI files found in specified folder
    """
    
    # If no folder path provided, ask user
    if folder_path is None:
        print("üìÅ Enter the folder path to scan (e.g., E:\\bams\\ or /mnt/e/bams/):")
        folder_path = input("Folder path: ").strip()
    
    # Convert Windows path to WSL path if needed
    if folder_path.startswith('E:\\') or folder_path.startswith('e:\\'):
        # Convert Windows path to WSL path
        wsl_path = folder_path.replace('E:\\', '/mnt/e/').replace('e:\\', '/mnt/e/').replace('\\', '/')
        if not wsl_path.endswith('/'):
            wsl_path += '/'
        folder_path = wsl_path
    elif folder_path.startswith('/mnt/e/'):
        # Already in WSL format
        if not folder_path.endswith('/'):
            folder_path += '/'
    else:
        print(f"‚ùå Invalid path format: {folder_path}")
        print("Please use format: E:\\bams\\ or /mnt/e/bams/")
        return False
    
    print(f"üîç Scanning folder: {folder_path}")
    
    if not os.path.exists(folder_path):
        print(f"‚ùå Folder not found: {folder_path}")
        print("Please check the path and make sure the folder exists")
        return False
    
    print(f"‚úÖ Found folder: {folder_path}")
    
    # Search for BAM and BAI files in the specified folder
    bam_files = []
    bai_files = []
    
    try:
        print("üîç Searching for BAM and BAI files in the specified folder...")
        for file in os.listdir(folder_path):
            file_path = os.path.join(folder_path, file)
            if os.path.isfile(file_path):
                if file.lower().endswith('.bam'):
                    bam_files.append(file_path)
                elif file.lower().endswith('.bai'):
                    bai_files.append(file_path)
        
        print(f"‚úÖ Found {len(bam_files)} BAM files and {len(bai_files)} BAI files")
        
        # Create the file list in the same style as create_sample_annotation_direct.py
        print(f"\nüìù Creating file list from {len(bam_files)} BAM files and {len(bai_files)} BAI files")
        print("=" * 80)
        
        # Get folder name for output files
        folder_name = os.path.basename(folder_path.rstrip('/'))
        if not folder_name:
            folder_name = "folder"
        
        # Create detailed output file
        output_file = f"{folder_name}_file_list_direct.txt"
        
        with open(output_file, 'w') as f:
            f.write(f"# {folder_name.upper()} Folder File List - Direct Discovery\n")
            f.write("# Generated by create_e_drive_file_list_direct.py\n")
            f.write(f"# Folder scanned: {folder_path}\n")
            f.write("# Format: File_Type\tFull_Path\tFilename\n")
            f.write("=" * 80 + "\n\n")
            
            # Write BAM files
            f.write("## BAM FILES\n")
            f.write("-" * 40 + "\n")
            for bam_file in sorted(bam_files):
                filename = os.path.basename(bam_file)
                # Convert to Windows path format for consistency
                windows_path = bam_file.replace('/', '\\')
                f.write(f"BAM\t{windows_path}\t{filename}\n")
            
            f.write(f"\n## BAI FILES\n")
            f.write("-" * 40 + "\n")
            for bai_file in sorted(bai_files):
                filename = os.path.basename(bai_file)
                # Convert to Windows path format for consistency
                windows_path = bai_file.replace('/', '\\')
                f.write(f"BAI\t{windows_path}\t{filename}\n")
            
            # Add summary
            f.write(f"\n## SUMMARY\n")
            f.write("-" * 40 + "\n")
            f.write(f"Total BAM files: {len(bam_files)}\n")
            f.write(f"Total BAI files: {len(bai_files)}\n")
            f.write(f"Generated on: {os.popen('date').read().strip()}\n")
        
        print(f"‚úÖ Created detailed file list: {output_file}")
        
        # Create simple path list file (WSL paths)
        simple_output = f"{folder_name}_paths_wsl.txt"
        with open(simple_output, 'w') as f:
            for bam_file in sorted(bam_files):
                f.write(f"{bam_file}\n")
            for bai_file in sorted(bai_files):
                f.write(f"{bai_file}\n")
        
        print(f"‚úÖ Created WSL path list: {simple_output}")
        
        # Create Windows path list
        windows_output = f"{folder_name}_paths_windows.txt"
        with open(windows_output, 'w') as f:
            for bam_file in sorted(bam_files):
                windows_path = bam_file.replace('/', '\\')
                f.write(f"{windows_path}\n")
            for bai_file in sorted(bai_files):
                windows_path = bai_file.replace('/', '\\')
                f.write(f"{windows_path}\n")
        
        print(f"‚úÖ Created Windows path list: {windows_output}")
        
        # Create BAM-only list (Windows format)
        bam_only_output = f"{folder_name}_bam_files_windows.txt"
        with open(bam_only_output, 'w') as f:
            for bam_file in sorted(bam_files):
                windows_path = bam_file.replace('/', '\\')
                f.write(f"{windows_path}\n")
        
        print(f"‚úÖ Created BAM-only list (Windows): {bam_only_output}")
        
        # Create BAI-only list (Windows format)
        bai_only_output = f"{folder_name}_bai_files_windows.txt"
        with open(bai_only_output, 'w') as f:
            for bai_file in sorted(bai_files):
                windows_path = bai_file.replace('/', '\\')
                f.write(f"{windows_path}\n")
        
        print(f"‚úÖ Created BAI-only list (Windows): {bai_only_output}")
        
        # Create Python list format (like in create_sample_annotation_direct.py)
        python_list_output = f"{folder_name}_bam_files_python_list.py"
        with open(python_list_output, 'w') as f:
            f.write("#!/usr/bin/env python3\n")
            f.write('"""\n')
            f.write(f"Auto-generated BAM files list from {folder_name} folder\n")
            f.write('"""\n\n')
            f.write(f"# BAM files found in {folder_name} folder\n")
            f.write("bam_files = [\n")
            for bam_file in sorted(bam_files):
                windows_path = bam_file.replace('/', '\\')
                f.write(f'    "{windows_path}",\n')
            f.write("]\n\n")
            f.write(f"# BAI files found in {folder_name} folder\n")
            f.write("bai_files = [\n")
            for bai_file in sorted(bai_files):
                windows_path = bai_file.replace('/', '\\')
                f.write(f'    "{windows_path}",\n')
            f.write("]\n")
        
        print(f"‚úÖ Created Python list format: {python_list_output}")
        
        print(f"\nüìä Summary:")
        print(f"   - BAM files: {len(bam_files)}")
        print(f"   - BAI files: {len(bai_files)}")
        print(f"   - Files created:")
        print(f"     * {output_file} (detailed list)")
        print(f"     * {simple_output} (WSL paths)")
        print(f"     * {windows_output} (Windows paths)")
        print(f"     * {bam_only_output} (BAM files, Windows format)")
        print(f"     * {bai_only_output} (BAI files, Windows format)")
        print(f"     * {python_list_output} (Python list format)")
        
        # Show first few files as examples
        print(f"\nüìÑ Example BAM files found:")
        for i, bam_file in enumerate(sorted(bam_files)[:5]):
            filename = os.path.basename(bam_file)
            print(f"   - {filename}")
        if len(bam_files) > 5:
            print(f"   ... and {len(bam_files) - 5} more")
        
        return True
        
    except PermissionError:
        print("‚ùå Permission denied accessing E: drive")
        return False
    except Exception as e:
        print(f"‚ùå Error accessing E: drive: {e}")
        return False

def main():
    """
    Main function
    """
    print("üéØ Folder File List Creator - Direct Discovery")
    print("=" * 50)
    
    # Check command line arguments
    folder_path = None
    if len(sys.argv) > 1:
        if sys.argv[1] == "--help" or sys.argv[1] == "-h":
            print("Usage:")
            print("  python create_e_drive_file_list_direct.py                    # Interactive mode")
            print("  python create_e_drive_file_list_direct.py 'E:\\bams\\'      # Specify folder path")
            print("  python create_e_drive_file_list_direct.py '/mnt/e/bams/'    # Specify WSL path")
            print("  python create_e_drive_file_list_direct.py --help            # Show this help")
            return True
        else:
            folder_path = sys.argv[1]
    
    success = create_e_drive_file_list_direct(folder_path)
    
    if success:
        print("\n‚úÖ Successfully created file lists from the specified folder!")
        print("\nüí° You can now use these files to:")
        print("   1. Copy the Python list format into your scripts")
        print("   2. Use the Windows paths for Windows-based tools")
        print("   3. Use the WSL paths for Linux-based tools")
    else:
        print("\n‚ùå Failed to create file lists from the specified folder!")
        print("\nüí° Troubleshooting:")
        print("   1. Make sure the folder path is correct")
        print("   2. Check if the folder exists and is accessible")
        print("   3. Try using Windows format: E:\\bams\\")
        print("   4. Try using WSL format: /mnt/e/bams/")

if __name__ == "__main__":
    main() 